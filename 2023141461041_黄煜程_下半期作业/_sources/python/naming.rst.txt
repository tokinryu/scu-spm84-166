.. _naming:

命名
====

强制
----
- 所有命名必须遵循本规范中的语法和语义要求.
- 变量, 常量, 函数, 方法, 类, 文件等命名应见文知意, 避免无意义缩写.
- 函数, 变量, 文件使用小写字母加下划线(snake_case).
- 常量使用全大写字母加下划线(UPPER_SNAKE_CASE).
- 类名使用首字母大写的驼峰命名(CamelCase).
- 内部类型, 变量, 方法统一在名称前加单下划线.
- 禁止使用双下划线开头命名, 禁止自定义魔法方法或属性.

.. warning::
    不得使用在名称前加双下划线的命名规则, 也不得自行命名魔法方法或属性.
    避免命名与内置模块或第三方模块命名冲突.

推荐
----
- 函数命名应使用动词短语, 其他命名应使用名词短语.
- 命名应尽量简洁明了, 避免拼音和无意义缩写.
- 避免与内置模块或第三方库命名冲突, 如有冲突应修改自定义命名.
- 临时变量可用简短命名(如 `idx`, `temp`), 但应保证语义清晰.

允许
----
- 特殊情况下可根据业务需求适当调整命名, 但需在注释中说明理由.
- 团队内部可约定部分模块或对象的简写命名, 但应保持一致性.

示例
----
.. code-block:: python

    # 内部模块
    class _BaseModule:
        # 内部方法
        def _connect_to_client(self):
            pass