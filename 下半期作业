一、代码风格
(a) 使用4个空格缩进，禁止使用Tab

(a) 每行代码不超过120字符

(b) 二元运算符换行时在运算符前断开

(a) 所有import语句置于文件顶部，分组顺序：标准库→第三方库→本地库

(a) 禁止通配符导入：from module import *

(b) 使用空行分隔函数/类定义（类内方法单空行，类间双空行）

(a) 字符串统一使用双引号""

二、命名规范
(a) 变量/函数名：lower_snake_case

(a) 类名：UpperCamelCase

(a) 常量名：UPPER_SNAKE_CASE

(b) 保护类型成员：_single_leading_underscore

(a) 私有类型成员：__double_leading_underscore

(b) 避免单字符变量名（除循环计数器i, j）

三、注释与文档
(a) 禁止在代码中提交敏感信息（密钥、凭证、IP等） 
(b) 复杂算法需添加行内注释（使用#）
(a) 修改代码时同步更新注释
 (c) 允许用英文缩写注释（如# TODO(fix): 异常处理）
 (b) 公共API应包含docstring

四、代码结构
(a) 单个函数不超过50行

(b) 函数参数不超过5个，超限需封装

(a) 禁止在循环内执行数据库/网络请求

(b) 优先使用列表推导式而非map()/filter()

(a) 使用is None/is not None进行空值检查

五、异常处理
(a) 禁止裸露except:，需捕获具体异常

(b) 异常消息需包含调试信息

(a) 资源操作使用with语句（文件、锁等）

(c) 允许在顶级入口捕获Exception（如main函数）

六、类型与测试
(b) 公共函数/方法建议添加类型注解

(a) 核心模块单元测试覆盖率≥85%

(b) 使用pytest而非unittest

(a) Mock外部服务依赖（数据库/API）

七、性能与安全
(a) 敏感数据禁止硬编码（使用密钥管理服务）

(b) SQL查询必须参数化（禁止拼接）

(a) 反序列化数据使用json.loads()而非pickle

(b) 列表操作优先用生成器

八、工具与部署
(a) 使用black+isort自动格式化

(b) 用mypy进行静态类型检查（CI强制）

(a) 依赖管理使用requirements.txt+pipenv/poetry

(a) Docker镜像使用Alpine基础版（≤150MB）

九、其他规范
(c) 允许在脚本中使用if __name__ == "__main__":

(a) 提交代码前必须通过flake8检查

(a) 禁止使用eval()和exec()（除非经安全审查） 

